version: "3.1"

services:
  rproxy:
    image: ${registry}/rproxy
    build: rproxy
    environment:
      PORT: 3000
      WEB_HOST: web:3000
      API_HOST: gateway:3000
    networks:
      - dmz
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 2s
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == worker
  web:
    image: ${registry}/web
    build: web
    environment:
      PORT: 3000
      API_HOST: gateway:3000
    networks:
      - dmz
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 2s
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == worker
  gateway:
    image: ${registry}/gateway
    build: gateway
    environment:
      PORT: 3000
      API_HOST: api:3000
    networks:
      - dmz
      - private
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 2s
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == worker
  api:
    image: ${registry}/api
    build: api
    environment:
      PORT: 3000
    networks:
      - private
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 5s
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == worker
    secrets:
      - my_secret
secrets:
  my_secret:
    external: true
networks:
  dmz:
    ipam:
      driver: default
      config:
        - subnet: 192.168.31.0/24
  private:
    ipam:
      driver: default
      config:
        - subnet: 192.168.32.0/24
